# Source http://linoxide.com/linux-how-to/devops-interview-questions-answers/
# On Agile implementations, emphasis is placed on people over processes. DevOps environment, development and operations are streamlined 
and barriers between the two groups should not exist.
# Agile development used as an alternative to Waterfall development practice. In Agile, the development process is more iterative and 
incremental, there is more testing and feedback at every stage of development as opposed to only the last stage in Waterfall.

Scrum is used to manage complex software and product development, using iterative and incremental practices. Scrum has three roles ie 
product owner, scrum master, and team.


* What is Kubernetes? 
It is massively scalable tool for managing containers, made by Google. It is used internally on huge deployments and because of that it 
is maybe the best option for production use of containers. It supports self healing by restating non responsive containers, it pack 
containers in a way that they take less resources and has many other great features.


* CI(continous integration) tools are  Jenkins, TeamCity, CircleCI , Hudson, Buildbot . CI server function is to continuously integrate all 
changes being made and committed to repository by different developers and check for compile errors.

* CD (Continous delivery)  is a practice of delivering the software for testing as soon as it is build by CI (Continuous Integration) 
server's. It requires heavy use of Versioning Control System. 

* Ansible is agentless conf.mgt. tool .It only requires SSH and Python. OpenStack is often called Cloud Operating System, it gives 
environment for deploying IaaS which gives possibility of making your own cloud similar to AWS. 

* IaaS is cloud environment that exposes VM to user to use as entire OS. Example OpenStack, AWS, Eucalyptus
* PaaS - To run applicatons - EBS
* SaaS - Salesforce.com
* Git is distributed while CVS(Computer Vision Syndrome) is centralised

* CoreOS is striped down linux distribution meant for running containters, mainly with its own rkt format but others are also supported. 
It was initially based on ChromeOS and supported Docker. The alternatives to this are canonical's ubuntu snappy or red hat enterprise 
linux atomic host. Of course, Containers can also be ran on regular Linux system

* It is a way to install Red Hat based systems by automated way. During manual install process, Anaconda installer creates file 
anaconda-ks.cfg which then can be used with system-config-kickstart tool to install same configuration automatically on multiple systems.

*Nagios, Icinga 2, OpenNMS, Splunk and Wireshark. Those tools are used to monitor network traffic, network quality and detect network 
problems even before they arise

*Juju is orchestration tool primarily for ubuntu for management, provision and configuration on Ubuntu systems. It is was initially 
written in Python and since have been rewritten in Go.


* Ansible needs only Python and SSH . 
Components of Ansible - 
1. Playbook - Ansible playbooks are a way to send commands to remote computers in a scripted way. They are written in YAML data serialization 
format. data serialization format (e.g. JSON, YAML) - way to translate a programmatic data structure (lists, arrays, dictionaries, etc) into a format 
that can be easily stored to disk.

Sample playbook to install web application on nginx on multiple hosts-
hosts: webservers
tasks:
- name: Installs nginx web server
apt: pkg=nginx state=installed update_cache=true
notify:
- start nginx

handlers:
- name: start nginx
service: name=nginx state=started

2. Hostfile - (by default under /etc/ansible/hosts) this is the Ansible Inventory file, and it stores the hosts, and their mappings to 
the host groups (webservers ,databases etc)

Sample host file -
[webservers]
10.0.15.22
# example of setting a host inventory by IP address.
# also demonstrates how to set per-host variables.

[repository_servers]
example-repository
#example of setting a host by hostname. Requires local lookup in /etc/hosts
# or DNS.
[dbservers]
db01

3. SSH key - For the first run, we'll need to tell ansible the SSH and Sudo passwords, because one of the thing that the common role 
does is to configure passwordless sudo, and deploy a SSH key. So in this case ansible can execute the playbookâ€™s commands in the remote 
nodes (hosts ) and deploy the web application nginx.


















