# Canary Release -
Canary deployments are a pattern for rolling out releases to a subset of users or servers. 
The idea is to first deploy the change to a small subset of servers, test it, and then roll the change out to the rest of the servers. ...
The basic steps of a canary deployment are: Deploy to one or more canary servers

# Blue-Green deployment - Blue-green deployment is a release technique that reduces downtime and risk by running two identical 
production environments called Blue and Green. At any time, only one of the environments is live, with the live environment serving 
all production traffic. ... Green is now live, and Blue is idle

--------------------------------------------------------------
# Building RPM package source -  http://www.tldp.org/HOWTO/RPM-HOWTO/build.html

--------------------------------------------------------------
# Jenkins 
# Example perform following steps
-Perform a software build with Apache Maven or Gradle
-Run a shell script
-Archive the build result
-Afterwards start the integration tests

# Jenkins runs on http://localhost:8080/
wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt-get update
sudo apt-get install jenkins
sudo apt-get update
sudo apt-get install jenkins

netstat -a -n -o | grep "8080"
http://localhost:8080/jenkins

# Under manage jenkins --> configure system --> we can set environment variable (example terraform variables) or git server , 
ssh server , docker registry,shell script, email etc















