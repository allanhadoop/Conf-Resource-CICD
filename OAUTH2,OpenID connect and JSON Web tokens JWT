Modern Security for Enterprise Applications - OAUTH2,OpenID connect and JSON Web tokens JWT

OAuth2 --

Autherization server <----> Client --this uses tokent 

json web token (JWT) - 
1. A client (e.g. web application) requests a token
2. A issuer issues a token
3. A resource (e.g. API , key exchange) consumes a token , that has a trust relationship with the issuer.

It has two main sections as follows
1. Header - 
    a. Metadata
    b. Algorithm and Key used
2. Claims 
    a. Issuer(iss)
    b. Audience(aud)
    c. Expiration(Exp)
    d. Subject(sub)
    e. ...and application defined claims

See architecture folder for details of example of header and cliams


Tokens are - 
1. Json encoded, 
2. Symmetric and asymmetric signatures (HMACSHA256-384, ECDSA, RSA) 
3. Symmetric and asymmetric encryption (RSA, AES/CGM)

----------------------------------------------OAuth2-----------------
So there are 2 types of car keys ( master key and valley parking keys ) . Same concept here in OAuth2

Resource server --------------> Client ------------> Resource owner 
Here resource owner (Car owner)  gives valley parking key(limited access key) to Client ( parking guy) to access data at Resource Server(car)
So piece of software is allowed access to client by a resource owner since resource owner owns data at resource center, so Oauth2 is more
of a delegated authorization (access tokens). This is typically used in iOt platform since every client needs separate token 

see architecture diagram .









